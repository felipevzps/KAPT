// config file for defining module parameters 

params {
    out_dir = '../results'          // outside 'workflows' directory, e.g. 'KAPT/results'
    report_dir = 'report'           // directory for reports 
    publish_dir_mode = 'symlink'    // avoid duplicating (copy) output files 
}

profiles {
    process_low {
        process {
            label = 'process_low'
            cpus   = { 1 * task.attempt }
            memory = { 4.GB * task.attempt }
            time   = { 4.h * task.attempt }
        }
    }

    process_medium {
        process {
            label = 'process_medium'
            cpus   = { 2 * task.attempt }
            memory = { 8.GB * task.attempt }
            time   = { 2.h * task.attempt }
        }
    }

    process_high {
        process {
            label = 'process_high'
            cpus   = { 4 * task.attempt }
            memory = { 12.GB * task.attempt }
            time   = { 1.h * task.attempt }
        }
    }
}

report {
    enabled = true
    report.overwrite = true
    file = "${params.report_dir}/execution_report.html"
}

dag {
    enabled = true
    dag.overwrite = true
    file = "${params.report_dir}/execution_dag.html"
}

timeline {
    enabled = true
    timeline.overwrite = true
    file = "${params.report_dir}/execution_timeline.html"
}

trace {
    enabled = true
    trace.overwrite = true
    file = "${params.report_dir}/execution_trace.txt"
}

process {
    // basic configuration for all profiles
    errorStrategy = { task.exitStatus in ((130..145) + 104) ? 'retry' : 'finish' }
    maxRetries    = 3
    maxErrors     = '-1'

    withName: 'getReadFTP' {
        publishDir = [
            path: "$projectDir/${params.out_dir}/0_getReadFTP",
            mode: params.publish_dir_mode
        ]
    }

    withName: 'downloadReadFTP' {
        publishDir = [
            path: "$projectDir/${params.out_dir}/1_rawReads",
            mode: params.publish_dir_mode
        ]
    }

    withName: 'raw_fastqc' {
        publishDir = [
            path: "$projectDir/${params.out_dir}/2_rawReadsFastQC",
            mode: params.publish_dir_mode
        ]
    }

    withName: 'raw_multiqc' {
        publishDir = [
            path: "$projectDir/${params.out_dir}/3_rawReadsMultiQC",
            mode: params.publish_dir_mode
        ]
    }

    withName: 'bbduk' {
        publishDir = [
            path: "$projectDir/${params.out_dir}/4_trimmedReads",
            mode: params.publish_dir_mode
        ]
    }

    withName: 'trimmed_fastqc' {
        publishDir = [
            path: "$projectDir/${params.out_dir}/5_trimmedReadsFastQC",
            mode: params.publish_dir_mode
        ]
    }

    withName: 'trimmed_multiqc' {
        publishDir = [
            path: "$projectDir/${params.out_dir}/6_trimmedReadsMultiQC",
            mode: params.publish_dir_mode
        ]
    }
    
    withName: 'trinity' {
        publishDir = [
            path: "$projectDir/${params.out_dir}/7_trinity",
            mode: params.publish_dir_mode
        ]
    }

    withName: 'MMSeqs2' {
        publishDir = [
            path: "$projectDir/${params.out_dir}/8_mmseqs2",
            mode: params.publish_dir_mode
        ]
    }

    withName: 'salmonIndex' {
        publishDir = [
            path: "$projectDir/${params.out_dir}/9_salmonIndex",
            mode: params.publish_dir_mode
        ]
    }

    withName: 'salmonQuant' {
        publishDir = [
            path: "$projectDir/${params.out_dir}/10_salmonQuant",
            mode: params.publish_dir_mode,
            saveAs: { "${it}/" } // preserving directory structure
        ]
    }

    withName: 'busco' {
        publishDir = [
            path: "$projectDir/${params.out_dir}/11_busco",
            mode: params.publish_dir_mode
        ]
    }

    withName: 'transrate' {
        publishDir = [
            path: "$projectDir/${params.out_dir}/12_transrate",
            mode: params.publish_dir_mode
        ]
    }

    withName: 'transdecoder' {
        publishDir = [
            path: "$projectDir/${params.out_dir}/13_transdecoder",
            mode: params.publish_dir_mode
        ]
    }

    withName: 'eggNOG-mapper' {
        publishDir = [
            path: "$projectDir/${params.out_dir}/14_eggNOG-mapper",
            mode: params.publish_dir_mode
        ]
    }
}
