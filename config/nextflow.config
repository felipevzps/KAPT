// config file for defining module parameters 

params {
    // paths to databases and samples
    eggnog_db_path = "/home/felipevzps/tmp_eggnog_database"
    samples_csv = "$projectDir/../samples/samples.csv"       // samples     (KAPT/samples)
    
    // paths relative to $publishDir
    output_dir = "../results"           // outside "workflows" directory    (KAPT/results)
    environment_dir = "../envs"         // directory for environments.yml   (KAPT/envs)

    report_dir = "report"               // directory for reports            (KAPT/report)
    conda_cache_dir = "conda-cache"     // directory for conda-cache        (KAPT/conda-cache)
    
    // publishDir mode
    publish_dir_mode = "symlink"        // avoid duplicating (copy) output files
}

profiles {
    process_low {
        process {
            label = 'process_low'
            cpus   = { 1 * task.attempt }
            memory = { 10.GB * task.attempt }
            time   = { 6.h * task.attempt }
        }
    }

    process_medium {
        process {
            label = 'process_medium'
            cpus   = { 10 * task.attempt }
            memory = { 100.GB * task.attempt }
            time   = { 12.h * task.attempt }
        }
    }

    process_high {
        process {
            label = 'process_high'
            cpus   = { 20 * task.attempt }
            memory = { 200.GB * task.attempt }
            time   = { 20.h * task.attempt }
        }
    }

    sge {
        process {
            executor = 'sge'
            queue = 'all.q'

            // use trinity module instead of docker container in the cluster 
            withName: "trinity" {
                module = 'Trinity/2.8.5'
                container = null
            }

            withName: "eggNOG_mapper" {
                module = 'eggnog-mapper/2.1.9'
                conda = null
            }
        }
    }
}

report {
    enabled = true
    overwrite = true
    file = "${params.report_dir}/execution_report.html"
}

dag {
    enabled = true
    overwrite = true
    file = "${params.report_dir}/execution_dag.html"
}

timeline {
    enabled = true
    overwrite = true
    file = "${params.report_dir}/execution_timeline.html"
}

trace {
    enabled = true
    overwrite = true
    file = "${params.report_dir}/execution_trace.txt"
}

conda {
    enabled = true
    cacheDir = "${params.conda_cache_dir}"
    useMamba = false 
}

docker {
    enabled = true
    //runOptions = '-u $(id -u):$(id -g)'
}

process {
    // basic configuration for all profiles
    errorStrategy = { task.exitStatus in ((130..145) + 104) ? "retry" : "finish" }
    maxRetries    = 3
    maxErrors     = "-1"

    withName: "getReadFTP" {
        publishDir = [
            path: "$projectDir/${params.output_dir}/0_getReadFTP",
            mode: params.publish_dir_mode
        ]
        conda = "$projectDir/${params.environment_dir}/ffq.yml"
        label = "process_low"
    }

    withName: "downloadReadFTP" {
        publishDir = [
            path: "$projectDir/${params.output_dir}/1_rawReads",
            mode: params.publish_dir_mode
        ]
        conda = "$projectDir/${params.environment_dir}/python.yml"
        label = "process_low"
    }

    withName: "raw_fastqc" {
        publishDir = [
            path: "$projectDir/${params.output_dir}/2_rawReadsFastQC",
            mode: params.publish_dir_mode
        ]
        conda = "$projectDir/${params.environment_dir}/fastqc.yml"
        label = "process_low"
    }

    withName: "raw_multiqc" {
        publishDir = [
            path: "$projectDir/${params.output_dir}/3_rawReadsMultiQC",
            mode: params.publish_dir_mode
        ]
        conda = "$projectDir/${params.environment_dir}/multiqc.yml"
        label = "process_low"
    }

    withName: "bbduk" {
        publishDir = [
            path: "$projectDir/${params.output_dir}/4_trimmedReads",
            mode: params.publish_dir_mode
        ]
        conda = "$projectDir/${params.environment_dir}/bbmap.yml"
        label = "process_medium"
    }

    withName: "trimmed_fastqc" {
        publishDir = [
            path: "$projectDir/${params.output_dir}/5_trimmedReadsFastQC",
            mode: params.publish_dir_mode
        ]
        conda = "$projectDir/${params.environment_dir}/fastqc.yml"
        label = "process_low"
    }

    withName: "trimmed_multiqc" {
        publishDir = [
            path: "$projectDir/${params.output_dir}/6_trimmedReadsMultiQC",
            mode: params.publish_dir_mode
        ]
        conda = "$projectDir/${params.environment_dir}/multiqc.yml"
        label = "process_low"
    }
    
    withName: "trinity" {
        publishDir = [
            path: "$projectDir/${params.output_dir}/7_trinity",
            mode: params.publish_dir_mode
        ]
        container = "trinityrnaseq/trinityrnaseq:2.15.2"
        label = "process_high"
    }

    withName: "MMSeqs2" {
        publishDir = [
            path: "$projectDir/${params.output_dir}/8_mmseqs2",
            mode: params.publish_dir_mode
        ]
        conda = "$projectDir/${params.environment_dir}/mmseqs.yml"
        label = "process_high"
    }

    withName: "salmonIndex" {
        publishDir = [
            path: "$projectDir/${params.output_dir}/9_salmonIndex",
            mode: params.publish_dir_mode
        ]
        conda = "$projectDir/${params.environment_dir}/salmon.yml"
        label = "process_low"
    }

    withName: "salmonQuant" {
        publishDir = [
            path: "$projectDir/${params.output_dir}/10_salmonQuant",
            mode: params.publish_dir_mode,
            saveAs: { "${it}/" } // preserving directory structure
        ]
        conda = "$projectDir/${params.environment_dir}/salmon.yml"
        label = "process_medium"
    }

    withName: "busco" {
        publishDir = [
            path: "$projectDir/${params.output_dir}/11_busco",
            mode: params.publish_dir_mode
        ]
        conda = "$projectDir/${params.environment_dir}/busco.yml"
        label = "process_medium"
    }

    withName: "transrate" {
        publishDir = [
            path: "$projectDir/${params.output_dir}/12_transrate",
            mode: params.publish_dir_mode
        ]
        conda = "$projectDir/${params.environment_dir}/transrate.yml"
        label = "process_medium"
    }

    withName: "transdecoder" {
        publishDir = [
            path: "$projectDir/${params.output_dir}/13_transdecoder",
            mode: params.publish_dir_mode
        ]
        conda = "$projectDir/${params.environment_dir}/transdecoder.yml"
        label = "process_medium"
    }

    withName: "eggNOG_mapper" {
        publishDir = [
            path: "$projectDir/${params.output_dir}/14_eggNOG-mapper",
            mode: params.publish_dir_mode
        ]
        conda = "$projectDir/${params.environment_dir}/eggnog-mapper.yml"
        label = "process_medium"
    }
}
